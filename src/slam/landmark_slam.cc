#include <bits/stdc++.h>
#include <gtsam/geometry/Pose2.h>
#include <gtsam/geometry/Point2.h>
#include <gtsam/nonlinear/NonlinearFactorGraph.h>
#include <gtsam/slam/BetweenFactor.h>
#include <gtsam/slam/BearingRangeFactor.h>
#include <gtsam/geometry/Rot2.h>
#include <gtsam/nonlinear/LevenbergMarquardtOptimizer.h>

using namespace gtsam;
using namespace std;

vector<vector<float>> odometries = {{0.109358, 1e-06, 0.0, 0.109358, 1e-06, 0.0}, {0.107125, -0.0, 0.0, 0.216483, 0.0, 0.0}, {0.119848, 0.0, 0.0, 0.336331, 0.0, 0.0}, {0.100369, -0.0, 0.0, 0.4367, 0.0, 0.0}, {0.102052, 0.0, 0.0, 0.538752, 1e-06, 0.0}, {0.114203, -0.0, 0.0, 0.652955, 0.0, 0.0}, {0.101393, -0.0, 0.0, 0.754348, -0.0, 0.0}, {0.104397, -0.0, 0.0, 0.858745, -0.0, 0.0}, {0.110967, -0.0, 0.0, 0.969712, -0.0, 0.0}, {0.114271, -0.0, 0.0, 1.083983, -1e-06, 0.0}, {0.101224, -0.0, 0.0, 1.185207, -1e-06, 0.0}, {0.111649, 0.0, 0.0, 1.296856, -1e-06, 0.0}, {0.10004, -0.0, 0.0, 1.396896, -1e-06, 0.0}, {0.107983, -0.0, 0.0, 1.50488, -1e-06, 0.0}, {0.102852, -0.0, 0.0, 1.607732, -1e-06, 0.0}, {0.115179, 0.0, 0.0, 1.722911, -1e-06, 0.0}, {0.111668, 0.0, 0.0, 1.834578, -1e-06, 0.0}, {0.109, 0.0, 0.0, 1.943578, -1e-06, 0.0}, {0.108976, -0.0, 0.0, 2.052555, -1e-06, 0.0}, {0.108971, 0.0, 0.0, 2.161526, -1e-06, 0.0}, {0.108799, -0.0, 0.0, 2.270325, -1e-06, 0.0}, {0.111113, -0.0, 0.0, 2.381438, -1e-06, 0.0}, {0.110187, -0.0, 0.0, 2.491624, -1e-06, 0.0}, {0.107266, -0.0, 0.0, 2.59889, -1e-06, 0.0}, {0.106011, 0.0, 0.0, 2.704901, -1e-06, 0.0}, {0.10472, 0.0, 0.0, 2.809621, -1e-06, 0.0}, {0.104023, 0.0, 0.0, 2.913644, -1e-06, 0.0}, {0.105967, -0.0, 0.0, 3.019611, -1e-06, 0.0}, {0.105755, -0.0, 0.0, 3.125365, -1e-06, 0.0}, {0.103278, -0.0, 0.0, 3.228643, -1e-06, 0.0}, {0.100083, 0.0, 0.0, 3.328726, -1e-06, 0.0}, {0.118917, -0.0, 0.0, 3.447643, -1e-06, 0.0}, {0.100321, 0.0, 0.0, 3.547964, -1e-06, 0.0}, {0.103284, 0.0, 0.0, 3.651248, -1e-06, 0.0}, {-0.104636, 0.0, 0.0, 3.546612, -1e-06, 0.0}, {-0.106529, -0.0, 0.0, 3.440083, -1e-06, 0.0}, {-0.107516, 0.0, 0.0, 3.332566, -1e-06, 0.0}, {-0.104699, 0.0, 0.0, 3.227868, -1e-06, 0.0}, {-0.1064, 0.0, 0.0, 3.121467, -0.0, 0.0}, {-0.105482, -0.0, 0.0, 3.015985, -1e-06, 0.0}, {-0.101629, -0.0, 0.0, 2.914356, -1e-06, 0.0}, {-0.111253, 0.0, 0.0, 2.803103, -1e-06, 0.0}, {-0.113266, 1e-06, 0.0, 2.689837, 0.0, 0.0}, {-0.11393, 0.0, 0.0, 2.575907, 0.0, 0.0}, {-0.112615, -0.0, 0.0, 2.463292, 0.0, 0.0}, {-0.104206, -0.0, 0.0, 2.359086, -0.0, 0.0}, {-0.110764, 0.0, 0.0, 2.248322, 0.0, 0.0}, {-0.110595, -0.0, 0.0, 2.137727, 0.0, 0.0}, {-0.112755, 0.0, 0.0, 2.024973, 0.0, 0.0}, {-0.114644, 0.0, 0.0, 1.910329, 1e-06, 0.0}, {-0.116559, -0.0, 0.0, 1.79377, 0.0, 0.0}, {-0.105139, -0.0, 0.0, 1.688631, 0.0, 0.0}, {-0.100799, -0.0, 0.0, 1.587831, -0.0, 0.0}, {-0.100219, -0.0, 0.0, 1.487612, -0.0, 0.0}, {-0.114382, 0.0, 0.0, 1.37323, 0.0, 0.0}, {-0.111881, 0.0, 0.0, 1.26135, 0.0, 0.0}, {-0.105701, -0.0, 0.0, 1.155649, -0.0, 0.0}, {-0.108191, -0.0, 0.0, 1.047458, -0.0, 0.0}, {-0.10127, -0.0, 0.0, 0.946188, -1e-06, 0.0}, {-0.10743, 0.0, 0.0, 0.838758, -1e-06, 0.0}, {-0.102874, 0.0, 0.0, 0.735884, -0.0, 0.0}, {0.10827, 0.009466, 0.103889, 0.844154, 0.009465, 0.103889}, {0.114544, 0.00291, 0.060962, 0.957779, 0.024238, 0.164851}, {0.117114, 0.003042, 0.062331, 1.072806, 0.046458, 0.227182}, {0.101654, 0.0022, 0.054095, 1.171352, 0.071498, 0.281277}, {0.117046, 0.002915, 0.062293, 1.28299, 0.106789, 0.34357}, {0.100594, 0.00202, 0.053529, 1.377024, 0.142575, 0.397099}, {0.118255, 0.002976, 0.062937, 1.484926, 0.191055, 0.460036}, {0.103872, 0.002297, 0.055277, 1.57698, 0.23923, 0.515312}, {0.117477, 0.003061, 0.062525, 1.677693, 0.299786, 0.577837}, {0.106899, 0.002533, 0.05689, 1.765853, 0.360298, 0.634727}, {0.109852, 0.002752, 0.058464, 1.852677, 0.427652, 0.693191}, {0.107253, 0.002229, 0.033042, 1.933753, 0.4979, 0.726233}, {0.111301, 0.0, 0.0, 2.01697, 0.57181, 0.726233}, {0.111277, 1e-06, 0.0, 2.10017, 0.645705, 0.726233}, {0.100344, -6.9e-05, -0.004332, 2.175241, 0.712288, 0.7219}, {0.100225, 0.0, 0.0, 2.250465, 0.778518, 0.7219}, {0.105622, -0.0, 0.0, 2.32974, 0.848314, 0.7219}, {0.111943, 1e-06, 0.0, 2.413759, 0.922288, 0.7219}, {0.110195, -0.000413, -0.009725, 2.496739, 0.994796, 0.712175}, {0.111962, -0.000224, -0.002689, 2.581634, 1.067791, 0.709486}, {0.106449, -0.0, 0.0, 2.662397, 1.137137, 0.709486}, {0.105424, 0.0, 0.0, 2.742382, 1.205815, 0.709486}, {0.104054, -1e-06, 0.0, 2.821327, 1.2736, 0.709486}, {0.103387, -1e-06, 0.0, 2.899767, 1.340951, 0.709486}, {0.10332, -0.0, 0.0, 2.978156, 1.408258, 0.709486}, {0.10343, 0.0, 0.0, 3.056628, 1.475637, 0.709486}, {0.103459, 0.0, 0.0, 3.135122, 1.543034, 0.709486}, {0.103774, -0.0, 0.0, 3.213855, 1.610637, 0.709486}, {0.103085, 0.0, 0.0, 3.292065, 1.677791, 0.709486}, {0.102331, -0.0, 0.0, 3.369704, 1.744455, 0.709486}, {-0.105174, -0.0, 0.0, 3.289909, 1.675939, 0.709486}, {-0.112128, 0.0, 0.0, 3.204837, 1.602894, 0.709486}, {-0.1325, 0.0, 0.0, 3.10431, 1.516578, 0.709486}, {-0.133347, 0.0, 0.0, 3.00314, 1.42971, 0.709486}, {-0.117542, 0.0, 0.0, 2.913961, 1.353139, 0.709486}, {-0.130409, 0.0, 0.0, 2.81502, 1.268184, 0.709486}, {-0.119192, -0.0, 0.0, 2.72459, 1.190537, 0.709486}, {-0.107557, 0.0, 0.0, 2.642987, 1.12047, 0.709486}, {-0.108772, 1e-06, 0.0, 2.560461, 1.049611, 0.709486}, {-0.119179, 0.0, 0.0, 2.47004, 0.971973, 0.709486}, {-0.102652, 0.000276, -0.012291, 2.391978, 0.905311, 0.697196}, {-0.104658, 6.6e-05, -0.000833, 2.3117, 0.838163, 0.696363}, {-0.107857, 0.0, 0.0, 2.228954, 0.76898, 0.696363}, {-0.106586, 0.002267, -0.05672, 2.145729, 0.702352, 0.639643}, {-0.100772, 0.002026, -0.053624, 2.06367, 0.643826, 0.586019}, {-0.116076, 0.002869, -0.061776, 1.965375, 0.582021, 0.524242}, {-0.108357, 0.002499, -0.057665, 1.870319, 0.529945, 0.466577}, {-0.109846, 0.002569, -0.058458, 1.771058, 0.482827, 0.408119}, {-0.118069, 0.002968, -0.062838, 1.661508, 0.438692, 0.345281}, {-0.101184, 0.002044, -0.053843, 1.565604, 0.406368, 0.291438}, {-0.105194, 0.002208, -0.055978, 1.464212, 0.378257, 0.23546}, {-0.104785, 0.002191, -0.055761, 1.361807, 0.355942, 0.179699}, {-0.122719, 0.003207, -0.065315, 1.240491, 0.337163, 0.114384}, {-0.118278, 0.002979, -0.062949, 1.122646, 0.326623, 0.051435}, {-0.11874, 0.000694, -0.007306, 1.004028, 0.321212, 0.044129}, {-0.11696, -0.0, 0.0, 0.887181, 0.316052, 0.044129}, {-0.114188, -0.00024, 0.012985, 0.773115, 0.310775, 0.057114}, {-0.108706, -0.000461, 0.005348, 0.664613, 0.304109, 0.062462}, {-0.118143, 0.0, 0.0, 0.5467, 0.296735, 0.062462}, {-0.100713, 0.0, 0.0, 0.446183, 0.290449, 0.062462}, {-0.108757, -0.0, 0.0, 0.337638, 0.28366, 0.062462}, {-0.125682, 0.0, 0.0, 0.212202, 0.275815, 0.062462}, {-0.12904, -0.0, 0.0, 0.083414, 0.26776, 0.062462}, {-0.125461, -0.0, 0.0, -0.041803, 0.259928, 0.062462}, {-0.103196, -0.0, 0.0, -0.144798, 0.253486, 0.062462}, {-0.100662, -1e-06, 0.0, -0.245263, 0.247202, 0.062462}};


vector<vector<float>> landmarks = {{0, 0, -0.38992, 1.721662}, {1, 0, -0.412913, 1.625897}, {1, 1, 0.871839, 2.582883}, {2, 0, -0.453521, 1.515381}, {2, 1, 0.910638, 2.510457}, {3, 0, -0.48566, 1.411749}, {3, 1, 0.944708, 2.444954}, {4, 0, -0.507806, 1.344984}, {4, 1, 0.968329, 2.403781}, {5, 0, -0.562132, 1.23218}, {5, 2, 0.249858, 2.666075}, {5, 1, 1.012555, 2.33263}, {6, 0, -0.602642, 1.146867}, {6, 2, 0.258807, 2.568269}, {6, 1, 1.047282, 2.284044}, {7, 0, -0.656867, 1.057333}, {7, 2, 0.269179, 2.473024}, {7, 1, 1.085579, 2.238622}, {8, 0, -0.715654, 0.980976}, {8, 2, 0.280371, 2.364933}, {8, 1, 1.124125, 2.202332}, {9, 0, -0.811179, 0.883811}, {9, 2, 0.297022, 2.250411}, {9, 1, 1.180321, 2.156999}, {10, 0, -0.903147, 0.803276}, {10, 2, 0.312541, 2.1416}, {10, 1, 1.226119, 2.112537}, {11, 0, -1.008741, 0.748124}, {11, 2, 0.324411, 2.043176}, {11, 1, 1.269561, 2.080548}, {12, 0, -1.124722, 0.697686}, {12, 2, 0.342443, 1.939161}, {12, 1, 1.316964, 2.056062}, {13, 0, -1.247538, 0.643953}, {13, 2, 0.359731, 1.845057}, {13, 1, 1.36201, 2.027994}, {14, 0, -1.399142, 0.622688}, {14, 2, 0.380792, 1.72948}, {14, 1, 1.408885, 2.026975}, {15, 0, -1.612255, 0.610506}, {15, 2, 0.410589, 1.607575}, {15, 1, 1.473759, 2.005532}, {16, 0, -1.773595, 0.620275}, {16, 2, 0.436499, 1.530635}, {16, 1, 1.522528, 2.000703}, {17, 0, -1.956261, 0.647767}, {17, 2, 0.473676, 1.430611}, {17, 1, 1.580294, 2.002053}, {18, 0, -1.918994, 0.651386}, {18, 2, 0.503437, 1.349466}, {18, 1, 1.623945, 2.001149}, {19, 3, -0.303139, 2.621961}, {19, 2, 0.546804, 1.255123}, {19, 1, 1.679463, 2.02487}, {20, 3, -0.315362, 2.517492}, {20, 2, 0.585568, 1.156488}, {20, 1, 1.722982, 2.040806}, {21, 3, -0.328713, 2.427898}, {21, 2, 0.646923, 1.082732}, {21, 1, 1.77542, 2.072159}, {22, 3, -0.345606, 2.324458}, {22, 2, 0.710787, 0.995804}, {22, 1, 1.825616, 2.08432}, {23, 3, -0.361232, 2.207243}, {23, 2, 0.787179, 0.919712}, {23, 1, 1.872795, 2.121387}, {24, 3, -0.380216, 2.11671}, {24, 2, 0.878396, 0.842636}, {24, 1, 1.918584, 2.158082}, {25, 3, -0.399199, 2.019627}, {25, 2, 0.973077, 0.781395}, {25, 1, 1.960883, 2.18416}, {26, 3, -0.416851, 1.918197}, {26, 2, 1.073592, 0.744383}, {26, 1, 1.99309, 2.235118}, {27, 3, -0.436797, 1.829335}, {27, 2, 1.185641, 0.701123}, {27, 1, 2.031709, 2.28162}, {28, 3, -0.466697, 1.706544}, {28, 4, 0.935776, 2.577982}, {28, 2, 1.355076, 0.676894}, {28, 1, 2.075243, 2.342648}, {29, 3, -0.492638, 1.630707}, {29, 4, 0.964849, 2.533108}, {29, 2, 1.486658, 0.659666}, {29, 1, 2.108809, 2.39617}, {30, 3, -0.518398, 1.553753}, {30, 4, 0.991321, 2.483031}, {30, 2, 1.6138, 0.656776}, {31, 3, -0.562053, 1.444607}, {31, 4, 1.035252, 2.419649}, {31, 2, 1.790467, 0.68199}, {32, 3, -0.601005, 1.360458}, {32, 4, 1.069896, 2.366319}, {32, 2, 1.908488, 0.6995}, {33, 3, -0.67299, 1.223792}, {33, 4, 1.129776, 2.299901}, {34, 3, -0.631842, 1.289549}, {34, 4, 1.089103, 2.340543}, {34, 2, 1.986181, 0.737408}, {35, 3, -0.593249, 1.378772}, {35, 4, 1.054095, 2.387412}, {35, 2, 1.870903, 0.699119}, {36, 3, -0.554658, 1.478207}, {36, 4, 1.01906, 2.43513}, {36, 2, 1.731124, 0.679991}, {37, 3, -0.517893, 1.54855}, {37, 4, 0.989203, 2.496008}, {37, 2, 1.601056, 0.668287}, {38, 3, -0.479225, 1.651313}, {38, 4, 0.953659, 2.567866}, {38, 2, 1.42985, 0.673197}, {38, 1, 2.090387, 2.383207}, {39, 3, -0.45293, 1.736001}, {39, 4, 0.923772, 2.623144}, {39, 2, 1.303087, 0.693561}, {39, 1, 2.058769, 2.34082}, {40, 3, -0.430485, 1.834465}, {40, 2, 1.187879, 0.722894}, {40, 1, 2.024201, 2.291954}, {41, 3, -0.401279, 1.935715}, {41, 2, 1.065137, 0.765626}, {41, 1, 1.986963, 2.242787}, {42, 3, -0.377353, 2.044892}, {42, 2, 0.958074, 0.820199}, {42, 1, 1.947973, 2.195611}, {43, 3, -0.350882, 2.15301}, {43, 2, 0.867455, 0.890705}, {43, 1, 1.909847, 2.176481}, {44, 3, -0.326931, 2.269411}, {44, 2, 0.77969, 0.969368}, {44, 1, 1.859713, 2.121204}, {45, 3, -0.308459, 2.345174}, {45, 2, 0.721673, 1.04085}, {45, 1, 1.821296, 2.099796}, {46, 3, -0.2921, 2.457238}, {46, 2, 0.661787, 1.123012}, {46, 1, 1.775183, 2.07754}, {47, 3, -0.274246, 2.572778}, {47, 2, 0.610131, 1.214877}, {47, 1, 1.725674, 2.048278}, {48, 3, -0.256141, 2.686926}, {48, 2, 0.570975, 1.311467}, {48, 1, 1.681626, 2.047968}, {49, 0, -2.074962, 0.680613}, {49, 2, 0.535704, 1.402527}, {49, 1, 1.635699, 2.022585}, {50, 0, -1.818795, 0.611079}, {50, 2, 0.501633, 1.505044}, {50, 1, 1.584124, 2.019942}, {51, 0, -1.647341, 0.60069}, {51, 2, 0.474467, 1.586073}, {51, 1, 1.538643, 2.01639}, {52, 0, -1.469348, 0.604936}, {52, 2, 0.452212, 1.682131}, {52, 1, 1.490954, 2.025033}, {53, 0, -1.31018, 0.623767}, {53, 2, 0.433733, 1.774159}, {53, 1, 1.448444, 2.029298}, {54, 0, -1.157126, 0.656666}, {54, 2, 0.416922, 1.870404}, {54, 1, 1.4045, 2.053791}, {55, 0, -1.009605, 0.708761}, {55, 2, 0.40142, 1.986995}, {55, 1, 1.359881, 2.066779}, {56, 0, -0.887272, 0.775924}, {56, 2, 0.384972, 2.087753}, {56, 1, 1.312963, 2.100451}, {57, 0, -0.79052, 0.845838}, {57, 2, 0.369943, 2.18872}, {57, 1, 1.268427, 2.124321}, {58, 0, -0.715249, 0.909264}, {58, 2, 0.36141, 2.286192}, {58, 1, 1.236377, 2.159657}, {59, 0, -0.643082, 0.996615}, {59, 2, 0.35388, 2.367526}, {59, 1, 1.199077, 2.182539}, {60, 0, -0.584648, 1.083525}, {60, 2, 0.34453, 2.469437}, {60, 1, 1.163261, 2.228552}, {61, 0, -0.66935, 1.047765}, {61, 2, 0.28572, 2.421353}, {61, 1, 1.115405, 2.206529}, {62, 0, -0.822052, 0.943325}, {62, 2, 0.234155, 2.298666}, {62, 1, 1.105373, 2.154633}, {63, 0, -0.963566, 0.886226}, {63, 2, 0.189765, 2.193063}, {63, 1, 1.093291, 2.093893}, {64, 0, -1.095037, 0.834127}, {64, 2, 0.149806, 2.108105}, {64, 1, 1.086143, 2.061191}, {65, 0, -1.32072, 0.783418}, {65, 2, 0.085218, 1.961459}, {65, 1, 1.075471, 1.989005}, {66, 0, -1.497373, 0.765232}, {66, 2, 0.036962, 1.854244}, {66, 1, 1.067652, 1.935979}, {67, 0, -1.693256, 0.776134}, {67, 2, -0.021055, 1.735859}, {67, 1, 1.058485, 1.879517}, {68, 0, -1.873097, 0.797363}, {68, 2, -0.080607, 1.633822}, {68, 1, 1.05293, 1.825001}, {69, 0, -2.097808, 0.851914}, {69, 2, -0.156634, 1.516568}, {69, 1, 1.047326, 1.754591}, {70, 2, -0.226044, 1.420742}, {70, 1, 1.044355, 1.696413}, {71, 2, -0.291876, 1.320759}, {71, 1, 1.039523, 1.639572}, {72, 2, -0.391265, 1.205483}, {72, 1, 1.03912, 1.578988}, {73, 2, -0.454332, 1.108619}, {73, 1, 1.063674, 1.530136}, {74, 2, -0.522551, 0.997919}, {74, 1, 1.125029, 1.468423}, {75, 2, -0.578956, 0.915373}, {75, 1, 1.178076, 1.436887}, {76, 2, -0.64341, 0.838161}, {76, 4, -0.081889, 2.639958}, {76, 1, 1.242418, 1.40657}, {77, 2, -0.708799, 0.763073}, {77, 4, -0.085046, 2.556124}, {77, 1, 1.30201, 1.386828}, {78, 2, -0.814474, 0.67446}, {78, 4, -0.090008, 2.434353}, {78, 1, 1.385237, 1.36928}, {79, 2, -0.940591, 0.597629}, {79, 4, -0.093186, 2.316475}, {79, 1, 1.460947, 1.352056}, {80, 2, -1.074318, 0.541704}, {80, 4, -0.09087, 2.221883}, {80, 1, 1.536877, 1.345126}, {81, 2, -1.221777, 0.494739}, {81, 4, -0.092357, 2.127535}, {81, 1, 1.608532, 1.347791}, {82, 2, -1.431533, 0.468185}, {82, 3, -1.445852, 2.518791}, {82, 4, -0.091832, 2.012297}, {82, 1, 1.695454, 1.370191}, {83, 2, -1.64793, 0.460799}, {83, 3, -1.487486, 2.505536}, {83, 4, -0.09524, 1.890522}, {83, 1, 1.76442, 1.372048}, {84, 2, -1.857825, 0.475372}, {84, 3, -1.526507, 2.487522}, {84, 4, -0.099765, 1.781865}, {84, 1, 1.834605, 1.398193}, {85, 3, -1.578276, 2.487978}, {85, 4, -0.105246, 1.660076}, {85, 1, 1.911597, 1.438951}, {86, 3, -1.614207, 2.474623}, {86, 4, -0.109252, 1.57662}, {86, 1, 1.969601, 1.476995}, {87, 3, -1.65627, 2.498607}, {87, 4, -0.112599, 1.481311}, {87, 1, 2.02695, 1.527801}, {88, 3, -1.691838, 2.502088}, {88, 4, -0.118068, 1.387608}, {88, 1, 2.08508, 1.577689}, {89, 4, -0.124049, 1.29294}, {89, 1, 2.125056, 1.619276}, {90, 4, -0.134521, 1.171012}, {91, 4, -0.135568, 1.205534}, {92, 4, -0.126255, 1.298658}, {92, 1, 2.110287, 1.625771}, {93, 4, -0.117703, 1.469951}, {93, 1, 2.022258, 1.545348}, {94, 3, -1.609576, 2.469537}, {94, 4, -0.104191, 1.601013}, {94, 1, 1.939726, 1.467455}, {95, 3, -1.560884, 2.462627}, {95, 4, -0.094278, 1.71579}, {95, 1, 1.87325, 1.441623}, {96, 2, -1.750546, 0.44309}, {96, 3, -1.502892, 2.480322}, {96, 4, -0.085034, 1.843911}, {96, 1, 1.791201, 1.39889}, {97, 2, -1.482143, 0.45107}, {97, 3, -1.447423, 2.497307}, {97, 4, -0.076629, 1.986283}, {97, 1, 1.709178, 1.374247}, {98, 2, -1.275252, 0.464393}, {98, 3, -1.407604, 2.510304}, {98, 4, -0.071744, 2.089873}, {98, 1, 1.645636, 1.369833}, {99, 2, -1.070946, 0.51251}, {99, 4, -0.062961, 2.203079}, {99, 1, 1.5682, 1.362677}, {100, 2, -0.93443, 0.562901}, {100, 4, -0.056512, 2.30456}, {100, 1, 1.50782, 1.369321}, {101, 2, -0.808304, 0.626558}, {101, 4, -0.051043, 2.387991}, {101, 1, 1.438456, 1.376369}, {102, 2, -0.699813, 0.70959}, {102, 4, -0.040016, 2.495492}, {102, 1, 1.378607, 1.391681}, {103, 2, -0.610592, 0.793837}, {103, 4, -0.029698, 2.593385}, {103, 1, 1.313623, 1.420385}, {104, 2, -0.532378, 0.874227}, {104, 4, -0.022791, 2.715053}, {104, 1, 1.249157, 1.441052}, {105, 2, -0.461672, 0.960796}, {105, 1, 1.209687, 1.481959}, {106, 2, -0.359275, 1.060836}, {106, 1, 1.197461, 1.515095}, {107, 2, -0.281612, 1.133426}, {107, 1, 1.191079, 1.564082}, {108, 2, -0.183704, 1.277094}, {108, 1, 1.186608, 1.612271}, {109, 2, -0.119631, 1.370035}, {109, 1, 1.178949, 1.656954}, {110, 0, -2.02129, 0.878543}, {110, 2, -0.066539, 1.463722}, {110, 1, 1.177703, 1.710139}, {111, 0, -1.82935, 0.843514}, {111, 2, 0.00423, 1.582327}, {111, 1, 1.174803, 1.765105}, {112, 0, -1.702736, 0.828711}, {112, 2, 0.04705, 1.661096}, {112, 1, 1.178086, 1.805279}, {113, 0, -1.453553, 0.805482}, {113, 2, 0.122778, 1.809949}, {113, 1, 1.184586, 1.875166}, {114, 0, -1.297654, 0.818339}, {114, 2, 0.164529, 1.91011}, {114, 1, 1.189331, 1.930016}, {115, 0, -1.074321, 0.871467}, {115, 2, 0.229107, 2.051358}, {115, 1, 1.195907, 1.981123}, {116, 0, -0.933566, 0.928929}, {116, 2, 0.241344, 2.177568}, {116, 1, 1.164999, 2.031378}, {117, 0, -0.855571, 0.989167}, {117, 2, 0.243966, 2.262207}, {117, 1, 1.136808, 2.060951}, {118, 0, -0.782837, 1.061597}, {118, 2, 0.237905, 2.338082}, {118, 1, 1.100645, 2.100721}, {119, 0, -0.712602, 1.157223}, {119, 2, 0.22386, 2.48379}, {119, 1, 1.045722, 2.171515}, {120, 0, -0.666638, 1.236634}, {120, 2, 0.215773, 2.569002}, {120, 1, 1.012885, 2.212539}, {121, 0, -0.62017, 1.294561}, {121, 2, 0.206208, 2.672305}, {121, 1, 0.975043, 2.266719}, {122, 0, -0.559263, 1.416578}, {122, 1, 0.928768, 2.349198}, {123, 0, -0.518726, 1.509377}, {123, 1, 0.895356, 2.403645}, {124, 0, -0.470687, 1.634053}, {124, 1, 0.859999, 2.50494}, {125, 0, -0.430909, 1.751568}, {125, 1, 0.827474, 2.58592}, {126, 0, -0.412161, 1.828451}};
int num_landmarks = 4;


int main() {
    // Create an empty nonlinear factor graph
    NonlinearFactorGraph graph;

    vector<Symbol> xs;
    vector<Symbol> ls;
    for (size_t i = 0; i <= num_landmarks; i++) {
        ls.push_back(Symbol('l', i+1));
    }
    for (size_t i = 0; i < odometries.size() + 1; i++) {
        xs.push_back(Symbol('x', i+1));
    }

    // Add a Gaussian prior on pose x_1
    Pose2 priorMean(0.0, 0.0, 0.0);
    noiseModel::Diagonal::shared_ptr priorNoise =
    noiseModel::Diagonal::Sigmas(Vector3(0.3, 0.3, 0.1));
    graph.add(PriorFactor<Pose2>(xs[0], priorMean, priorNoise));

    // Add two odometry factors
    noiseModel::Diagonal::shared_ptr odometryNoise =
    noiseModel::Diagonal::Sigmas(Vector3(0.2, 0.2, 0.1));
    for (size_t i = 0; i < odometries.size(); i++) {
        graph.add(gtsam::BetweenFactor<Pose2>(xs[i], xs[i+1], Pose2(odometries[i][0], odometries[i][1], odometries[i][2]), odometryNoise));
    }

    noiseModel::Diagonal::shared_ptr brNoise = noiseModel::Diagonal::Sigmas(Vector2(0.1, 0.2));
    for (size_t i = 0; i < landmarks.size(); i++) {
        graph.add(gtsam::BearingRangeFactor<Pose2, Point2>(xs[round(landmarks[i][0])], ls[round(landmarks[i][1])], Rot2::fromAngle(landmarks[i][2]), landmarks[i][3], brNoise));
    }

    Values initial_estimates;

    vector<Pose2> initial_pos_estimates;
    Pose2 pos(0, 0, 0);
    initial_pos_estimates.push_back(pos);
    for (size_t i = 0; i < odometries.size(); i++) {
        initial_pos_estimates.push_back(Pose2(odometries[i][3], odometries[i][4], odometries[i][5]));
    }  

    // cout << "before" << endl;

    unordered_set<int> visited;
    for (size_t i = 0; i < landmarks.size(); i++) {
        int pos_idx = round(landmarks[i][0]);
        int ld_idx = round(landmarks[i][1]);
        cout << "l" << ld_idx + 1 << " x" << pos_idx + 1 << endl;
        if (visited.count(ld_idx))
            continue;
        visited.insert(ld_idx);
        
        float r = landmarks[i][3];
        float theta = landmarks[i][2];
        initial_estimates.insert(ls[ld_idx], initial_pos_estimates[pos_idx] * Point2(r*cos(theta), r*sin(theta)));
        cout << "l" << ld_idx + 1 << " x" << pos_idx + 1 << endl;
    }

    // cout << "after" << endl;

    for (size_t i = 0; i < initial_pos_estimates.size(); i++) {
        initial_estimates.insert(xs[i], initial_pos_estimates[i]);
    }

    LevenbergMarquardtOptimizer optimzer(graph, initial_estimates);
    Values result = optimzer.optimize();
    result.print("\nFinal result\n");

}